name: CI-CD Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set lowercase repo
        id: vars
        run: echo "REPO_LC=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ steps.vars.outputs.REPO_LC }}:sha-${{ github.sha }}

      - name: Trivy vulnerability scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ steps.vars.outputs.REPO_LC }}:sha-${{ github.sha }}
          format: table
          exit-code: 0
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH

  integration-test:
    needs: build
    runs-on: ubuntu-latest

    services:
      mongo: 
        image: mongo:6
        ports: 
          - "27017:27017"
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: example
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ping:1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set lowercase repo
        id: vars
        run: echo "REPO_LC=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT

      - name: Set image env
        run: echo "IMAGE=${{ env.REGISTRY }}/${{ steps.vars.outputs.REPO_LC }}:sha-${{ github.sha }}" >> $GITHUB_ENV
       
      - name: Log in to GHCR for integration test    # <-- ADD THIS STEP HERE
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
       
      - name: Pull and run app container              # <-- REPLACE YOUR EXISTING STEP
        run: |
          echo "=== Pulling image from GHCR ==="
          docker pull ${{ env.IMAGE }}
          
          echo "=== Running container ==="
          docker run --rm -d \
            --name app \
            --network ${{ job.services.mongo.network }} \
            -e MONGO_URL=mongodb://root:example@mongo:27017/todo \
            -p 8080:8080 \
            ${{ env.IMAGE }}

      - name: Debug app container
        run: |
          echo "=== Checking if container started ==="
          docker ps -a
          
          echo "=== App container logs ==="
          docker logs app 2>&1 || echo "No app container or no logs"
          
          echo "=== Image info ==="
          docker images | grep ghcr.io || echo "No GHCR images found"     

      - name: Wait & health-check
        run: |
          sleep 15
          curl -f http://localhost:8080 || exit 1